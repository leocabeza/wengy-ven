# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.12

      # Specify service dependencies here if necessary
      - image: circleci/redis:5.0.0

    working_directory: ~/repo

    steps:
      - run: echo "About to checkout project"
      - checkout
      - run: echo "Project checked out successfully"

      - run: echo "About to copy config file"
      - run: cp config/config.sample.js config/config.js
      - run: echo "Config copied successfully"

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: echo "About to install npm dependencies"
      - run: npm install
      - run: echo "npm dependencies were successfully installed"

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: echo "About to run tests"
      - run: npm run test
      - run: echo "Tests completed successfully"

      - run: echo "About to run linter"
      - run: npm run lint
      - run: echo "Lint completed successfully"

  deploy-stage:
    machine: true
    steps:
      - run: echo "About to connect to remote server"
      - run: echo ssh -v ${DROPLET_USER}@${DROPLET_IP} STAGING_MODE=1 ./wengy-ven-deployer.sh
      - run: echo "Disconnected from server"

  deploy-prod:
    machine: true
    steps:
      - run: echo "About to connect to remote server"
      - run: echo ssh -v ${DROPLET_USER}@${DROPLET_IP} STAGING_MODE=0 ./wengy-ven-deployer.sh
      - run: echo "Disconnected from server"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-stage:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master

